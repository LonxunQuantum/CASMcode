sudo: false

language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.8
          - g++-4.8
          # boost1.54
          - libboost-all-dev
          - autoconf-archive
          - bash-completion
      env:
        - CC=gcc-4.8
        - CXX=g++-4.8
        
        # set environment variables for boost
        - CASM_BOOST_INCLUDEDIR="/usr/include/"
        - CASM_BOOST_LIBDIR="/usr/lib/x86_64-linux-gnu/"
        - CASM_BOOST_NO_CXX11_SCOPED_ENUMS=1

    - os: osx
      compiler: clang
      env:
        - CASM_BOOST_NO_CXX11_SCOPED_ENUMS=1
        

before_install:

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
        CASM_NCPU=2;
        . /usr/share/bash-completion/bash_completion;
        CXXFLAGS="-O3 -DNDEBUG -DBOOST_NO_CXX11_SCOPED_ENUMS -Wno-deprecated-register -Wno-deprecated-declarations";
        CONFIGFLAGS="--with-bash-completion-dir=$BASH_COMPLETION_DIR --with-boost-libdir=$CASM_BOOST_LIBDIR";
    fi
  
  # boost1.61 is installed at /usr/local
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew list;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew install bash-completion autoconf-archive;
        CASM_NCPU=2;
        . /usr/local/etc/bash_completion;
        CXXFLAGS="-O3 -DNDEBUG -DBOOST_NO_CXX11_SCOPED_ENUMS -Wno-deprecated-register -Wno-deprecated-declarations";
        CONFIGFLAGS="--with-bash-completion-dir=$BASH_COMPLETION_DIR";
    fi
  
  # check g++ version
  - g++ --version
  
  # check python
  - python --version
  - python -c "import sys; print sys.path"
  
  # upgrade pip and install testing requirements
  - export PATH=`python -m site --user-site`/../../../bin:$PATH
  - pip install --upgrade pip
  - pip install --user -r python/casm/test_requirements.txt
  
  # check env
  - printenv
  

script: 
  - set -e
  - 'echo "CASM_NCPU: $CASM_NCPU"'
  
  # C++ and CLI
  - ./bootstrap.sh
  - ./configure CXXFLAGS="${CXXFLAGS}" ${CONFIGFLAGS}
  - make -j $CASM_NCPU
  - make check -j $CASM_NCPU

  # Python
  - cd python/casm
  - pip install --user .
  - pytest -r ap -s test_casm
