#ifndef CASM_DiffTransEnumEquivalents
#define CASM_DiffTransEnumEquivalents

#include "casm/misc/cloneable_ptr.hh"
#include "casm/symmetry/PermuteIterator.hh"
#include "casm/clex/Configuration.hh"

#include "casm/kinetics/DiffusionTransformation.hh"
#include "casm/symmetry/EnumEquivalents.hh"

namespace CASM {

  /// \brief Enumerate all equivalent Configurations in a Supercell, as generated
  ///        by Supercell factor group symmetry
  ///
  /// - The 'begin' Configuration is always the canonical form
  /// - Note that there may be other Configurations equivalent by primitive
  ///   Structure factor group symmetry that can not be generated by permutations
  ///   using the Supercell factor group symmetry
  ///
  /// \ingroup EnumEquivalents
  /// \ingroup ConfigEnumGroup
  ///
  class DiffTransEnumEquivalents : public EnumEquivalents<DiffusionTransformation, PermuteIterator, Configuration> {
  /// Need input for bg_config, but not sure if it needs to be Configuration or some sort of factor-group type.
    // -- Required -------------------

  public:

    DiffTransEnumEquivalents(const DiffusionTransformation &diff_trans, PermuteIterator begin, PermuteIterator end, const Configuration &bg_config);

    std::string name() const override {
      return enumerator_name;
    }

    static const std::string enumerator_name;

  };

}

#endif
