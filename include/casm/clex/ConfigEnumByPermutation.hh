#ifndef CASM_ConfigEnumByPermutation
#define CASM_ConfigEnumByPermutation

#include "casm/clex/Configuration.hh"
#include "casm/misc/cloneable_ptr.hh"
#include "casm/symmetry/EnumEquivalents.hh"
#include "casm/symmetry/PermuteIterator.hh"

namespace CASM {

/// \brief Enumerate all equivalent Configurations obtained by permuations in a
/// Supercell
///
/// - The 'begin' Configuration is always the canonical form
/// - Note that there may be other Configurations equivalent by primitive
///   Structure factor group symmetry that can not be generated by permutations
///   using the Supercell factor group symmetry
///
/// \ingroup EnumEquivalents
/// \ingroup ConfigEnumGroup
///
class ConfigEnumByPermutation
    : public EnumEquivalents<Configuration, PermuteIterator> {
  // -- Required -------------------

 public:
  ConfigEnumByPermutation(const Configuration &config);

  ConfigEnumByPermutation(const Configuration &config, PermuteIterator begin,
                          PermuteIterator end);

  std::string name() const override { return enumerator_name; }

  static const std::string enumerator_name;
};

}  // namespace CASM

#endif
